{"ast":null,"code":"import { LOGIN_USER_SUCCESS, LOGIN_USER_FAIL, SIGNUP_USER_SUCCESS, SIGNUP_FAIL, LOAD_USER, LOGOUT_USER, AUTH_FAIL, CLEAR_ERROR, LOGIN_VIA_GOOGLE } from \"../types\";\nimport axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthnToken\"; //Will store logged in or Signed up user\n\nexport const loadUser = async () => async dispatch => {\n  console.log(\"load User is called\");\n  setAuthToken(localStorage.token);\n\n  try {\n    const res = await axios.get(\"/user\");\n    console.log(\"loading user with value\" + res);\n    dispatchEvent({\n      type: LOAD_USER,\n      payload: res.data\n    });\n  } catch (error) {\n    //TODO\n    dispatch({\n      type: AUTH_FAIL,\n      payload: error.response.data.msg\n    });\n  }\n}; //Register User on database\n\nexport const signUpUser = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }; //Have  to make rest call for registering user\n\n    const res = await axios.post(\"/user\", formData, config);\n    dispatch({\n      type: SIGNUP_USER_SUCCESS,\n      payload: res.data\n    });\n    loadUser();\n  } catch (errors) {\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: errors.response.data.msg\n    });\n  }\n}; // Login User when check with Database\n\nexport const loginUser = formData => async dispatch => {\n  console.log(\"login user is called\");\n\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }; //Will make a rest call to check if we can login and the set token returned\n\n    const res = await axios.post(\"/auth\", formData, config);\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: res.data\n    });\n    loadUser();\n  } catch (errors) {\n    dispatch({\n      type: LOGIN_USER_FAIL,\n      payload: errors.response.data.msg\n    });\n  }\n};\nexport const loginViaGoogle = email => async dispatch => {\n  const res = await axios.get(`/user/${email}`);\n  console.log(JSON.stringify(res));\n  dispatch({\n    type: LOGIN_VIA_GOOGLE,\n    payload: res.data\n  });\n}; //Logout USer\n\nexport const logoutUser = () => async dispatch => {\n  dispatch({\n    type: LOGOUT_USER\n  });\n}; //Clear all errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/state/actions/userAction.js"],"names":["LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","SIGNUP_USER_SUCCESS","SIGNUP_FAIL","LOAD_USER","LOGOUT_USER","AUTH_FAIL","CLEAR_ERROR","LOGIN_VIA_GOOGLE","axios","setAuthToken","loadUser","dispatch","console","log","localStorage","token","res","get","dispatchEvent","type","payload","data","error","response","msg","signUpUser","formData","config","headers","post","errors","loginUser","loginViaGoogle","email","JSON","stringify","logoutUser","clearErrors"],"mappings":"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","sourcesContent":["import {\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_FAIL,\r\n  SIGNUP_USER_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  LOAD_USER,\r\n  LOGOUT_USER,\r\n  AUTH_FAIL,\r\n  CLEAR_ERROR,\r\n  LOGIN_VIA_GOOGLE,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../../utils/setAuthnToken\";\r\n\r\n//Will store logged in or Signed up user\r\nexport const loadUser = async () => async (dispatch) => {\r\n  console.log(\"load User is called\");\r\n  setAuthToken(localStorage.token);\r\n  try {\r\n    const res = await axios.get(\"/user\");\r\n    console.log(\"loading user with value\" + res);\r\n    dispatchEvent({\r\n      type: LOAD_USER,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    //TODO\r\n    dispatch({\r\n      type: AUTH_FAIL,\r\n      payload: error.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\n//Register User on database\r\nexport const signUpUser = (formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    };\r\n    //Have  to make rest call for registering user\r\n    const res = await axios.post(\"/user\", formData, config);\r\n\r\n    dispatch({\r\n      type: SIGNUP_USER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    loadUser();\r\n  } catch (errors) {\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n      payload: errors.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User when check with Database\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n  console.log(\"login user is called\");\r\n\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    };\r\n    //Will make a rest call to check if we can login and the set token returned\r\n    const res = await axios.post(\"/auth\", formData, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_USER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    loadUser();\r\n  } catch (errors) {\r\n    dispatch({\r\n      type: LOGIN_USER_FAIL,\r\n      payload: errors.response.data.msg,\r\n    });\r\n  }\r\n};\r\nexport const loginViaGoogle = (email) => async (dispatch) => {\r\n  const res = await axios.get(`/user/${email}`);\r\n  console.log(JSON.stringify(res));\r\n  dispatch({\r\n    type: LOGIN_VIA_GOOGLE,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\n//Logout USer\r\nexport const logoutUser = () => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT_USER,\r\n  });\r\n};\r\n\r\n//Clear all errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERROR,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}