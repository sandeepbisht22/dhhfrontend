{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bisht\\\\Project\\\\DHH\\\\dhh\\\\client\\\\src\\\\component\\\\common\\\\Songs.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { songAction, userChoiceAction } from \"../../state/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songs = () => {\n  _s();\n\n  const songsList = useSelector(state => state.song.songList);\n  const artistType = useSelector(state => state.artist.artistType);\n  const currArtist = useSelector(state => state.artist.currArtist);\n  const dispatch = useDispatch();\n  const [songFavouriteIconClass, setSongFavouriteIconClass] = useState(\"far fa-heart\");\n\n  function songFavourite(id) {\n    dispatch(userChoiceAction.addFav(\"favsong\", id));\n    setSongFavouriteIconClass(songFavouriteIconClass === \"far fa-heart\" ? \"fas fa-heart\" : \"far fa-heart\");\n  }\n\n  function artistLikedUnliked(currentAction, id) {\n    if (currentAction === \"unLike\") {\n      dispatch(userChoiceAction.addFav(\"dislikedSong\", id));\n    }\n\n    dispatch(songAction.likeDislikeSong(id, currentAction));\n\n    if (currentAction === \"like\") {\n      dispatch(userChoiceAction.addFav(\"likedSong\", id));\n    }\n  }\n\n  useEffect(() => {\n    if (page === \"user\") {\n      dispatch(songAction.userFavSong());\n    } else {\n      dispatch(songAction.allArtistSongs(artistType, currArtist._id));\n    }\n  });\n  return songsList !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex pb-3\",\n    style: {\n      color: \"white\"\n    },\n    children: songsList.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3\",\n      id: song._id,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: song.songlinks[0][\"youtube\"],\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.img,\n            className: \"border border-3 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#FFFFFF\"\n        },\n        className: \"d-flex justify-content-evenly\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => artistLikedUnliked(\"like\", song._id),\n            className: \"fas fa-microphone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ps-3\",\n            children: song.like\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => songFavourite(song._id),\n            className: songFavouriteIconClass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => artistLikedUnliked(\"unLike\", song._id),\n            className: \"fas fa-microphone-slash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ps-3\",\n            children: song.dislike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Songs, \"RxejhtA+W6vR3uIy4RWLj7eAv2I=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Songs;\nexport default Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/component/common/Songs.js"],"names":["React","Fragment","useEffect","useRef","useState","useDispatch","useSelector","songAction","userChoiceAction","Songs","songsList","state","song","songList","artistType","artist","currArtist","dispatch","songFavouriteIconClass","setSongFavouriteIconClass","songFavourite","id","addFav","artistLikedUnliked","currentAction","likeDislikeSong","page","userFavSong","allArtistSongs","_id","color","map","songlinks","img","name","like","dislike"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { songAction, userChoiceAction } from \"../../state/actions\";\r\n\r\nconst Songs = () => {\r\n  const songsList = useSelector((state) => state.song.songList);\r\n  const artistType = useSelector((state) => state.artist.artistType);\r\n  const currArtist = useSelector((state) => state.artist.currArtist);\r\n\r\n  const dispatch = useDispatch();\r\n  const [songFavouriteIconClass, setSongFavouriteIconClass] =\r\n    useState(\"far fa-heart\");\r\n\r\n  function songFavourite(id) {\r\n    dispatch(userChoiceAction.addFav(\"favsong\", id));\r\n    setSongFavouriteIconClass(\r\n      songFavouriteIconClass === \"far fa-heart\"\r\n        ? \"fas fa-heart\"\r\n        : \"far fa-heart\"\r\n    );\r\n  }\r\n  function artistLikedUnliked(currentAction, id) {\r\n    if (currentAction === \"unLike\") {\r\n      dispatch(userChoiceAction.addFav(\"dislikedSong\", id));\r\n    }\r\n    dispatch(songAction.likeDislikeSong(id, currentAction));\r\n    if (currentAction === \"like\") {\r\n      dispatch(userChoiceAction.addFav(\"likedSong\", id));\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (page === \"user\") {\r\n      dispatch(songAction.userFavSong());\r\n    } else {\r\n      dispatch(songAction.allArtistSongs(artistType, currArtist._id));\r\n    }\r\n  });\r\n\r\n  return (\r\n    songsList !== null && (\r\n      <div className=\"d-flex pb-3\" style={{ color: \"white\" }}>\r\n        {songsList.map((song) => (\r\n          <div className=\"col-md-3\" id={song._id}>\r\n            <div>\r\n              <a\r\n                href={song.songlinks[0][\"youtube\"]}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n              >\r\n                <img src={song.img} className=\"border border-3 rounded\"></img>\r\n              </a>\r\n            </div>\r\n            <div>{song.name}</div>\r\n\r\n            <div\r\n              style={{ color: \"#FFFFFF\" }}\r\n              className=\"d-flex justify-content-evenly\"\r\n            >\r\n              <div>\r\n                <i\r\n                  onClick={() => artistLikedUnliked(\"like\", song._id)}\r\n                  className=\"fas fa-microphone\"\r\n                ></i>\r\n                <span className=\"ps-3\">{song.like}</span>\r\n              </div>\r\n              <div>\r\n                <i\r\n                  onClick={() => songFavourite(song._id)}\r\n                  className={songFavouriteIconClass}\r\n                ></i>\r\n              </div>\r\n              <div>\r\n                <i\r\n                  onClick={() => artistLikedUnliked(\"unLike\", song._id)}\r\n                  className=\"fas fa-microphone-slash\"\r\n                ></i>\r\n                <span className=\"ps-3\">{song.dislike}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Songs;\r\n"]},"metadata":{},"sourceType":"module"}