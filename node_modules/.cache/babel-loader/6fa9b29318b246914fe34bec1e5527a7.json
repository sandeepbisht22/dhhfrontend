{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/bisht/Project/deployment/dhh/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/bisht/Project/deployment/dhh/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import setAuthToken from\"../../utils/setAuthnToken\";import{LIKE_SONG,ALL_SONG}from\"../types\";export var userFavSong=function userFavSong(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,allSongs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setAuthToken(localStorage.token);config={header:{\"content-type\":\"application/json\"}};//Check if Post is actually required because we are just getting the user fav info\n_context.next=4;return axios.post(\"/userchoice/allFavSongs\",null,config);case 4:allSongs=_context.sent;dispatch({type:ALL_SONG,payload:allSongs.data});case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var allArtistSongs=function allArtistSongs(artistType,id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var allSongs;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(\"/song/\".concat(artistType,\"/\").concat(id));case 2:allSongs=_context2.sent;if(allSongs===null){allSongs.data=null;}dispatch({type:ALL_SONG,payload:allSongs.data});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var likeDislikeSong=function likeDislikeSong(songID,action){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,route,res,payload;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setAuthToken(localStorage.token);config={header:{\"content-type\":\"application/json\"}};route=action===\"like\"?\"likeSong\":\"dislikeSong\";_context3.next=5;return axios.post(\"/song/\".concat(route,\"/\").concat(songID),null,config);case 5:res=_context3.sent;payload={id:songID,data:res.data};dispatch({type:LIKE_SONG,payload:payload});case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/bisht/Project/deployment/dhh/client/src/state/actions/songAction.js"],"names":["axios","setAuthToken","LIKE_SONG","ALL_SONG","userFavSong","dispatch","localStorage","token","config","header","post","allSongs","type","payload","data","allArtistSongs","artistType","id","get","likeDislikeSong","songID","action","route","res"],"mappings":"mUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,UAApC,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,kGAAM,iBAAOC,QAAP,sIAC/BJ,YAAY,CAACK,YAAY,CAACC,KAAd,CAAZ,CACMC,MAFyB,CAEhB,CACbC,MAAM,CAAE,CACN,eAAgB,kBADV,CADK,CAFgB,CAQ/B;AAR+B,sBASRT,CAAAA,KAAK,CAACU,IAAN,CAAW,yBAAX,CAAsC,IAAtC,CAA4CF,MAA5C,CATQ,QASzBG,QATyB,eAW/BN,QAAQ,CAAC,CACPO,IAAI,CAAET,QADC,CAEPU,OAAO,CAAEF,QAAQ,CAACG,IAFX,CAAD,CAAR,CAX+B,sDAAN,gEAApB,CAiBP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAaC,EAAb,kGAAoB,kBAAOZ,QAAP,0JACzBL,CAAAA,KAAK,CAACkB,GAAN,iBAAmBF,UAAnB,aAAiCC,EAAjC,EADyB,QAC1CN,QAD0C,gBAEhD,GAAIA,QAAQ,GAAK,IAAjB,CAAuB,CACrBA,QAAQ,CAACG,IAAT,CAAgB,IAAhB,CACD,CACDT,QAAQ,CAAC,CACPO,IAAI,CAAET,QADC,CAEPU,OAAO,CAAEF,QAAQ,CAACG,IAFX,CAAD,CAAR,CALgD,wDAApB,kEAAvB,CAWP,MAAO,IAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAASC,MAAT,kGAAoB,kBAAOhB,QAAP,mJACjDJ,YAAY,CAACK,YAAY,CAACC,KAAd,CAAZ,CACMC,MAF2C,CAElC,CACbC,MAAM,CAAE,CACN,eAAgB,kBADV,CADK,CAFkC,CAO3Ca,KAP2C,CAOnCD,MAAM,GAAK,MAAX,CAAoB,UAApB,CAAiC,aAPE,wBAS/BrB,CAAAA,KAAK,CAACU,IAAN,iBAAoBY,KAApB,aAA6BF,MAA7B,EAAuC,IAAvC,CAA6CZ,MAA7C,CAT+B,QAS3Ce,GAT2C,gBAU3CV,OAV2C,CAUjC,CACdI,EAAE,CAAEG,MADU,CAEdN,IAAI,CAAES,GAAG,CAACT,IAFI,CAViC,CAcjDT,QAAQ,CAAC,CACPO,IAAI,CAAEV,SADC,CAEPW,OAAO,CAAEA,OAFF,CAAD,CAAR,CAdiD,wDAApB,kEAAxB","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../../utils/setAuthnToken\";\r\nimport { LIKE_SONG, ALL_SONG } from \"../types\";\r\n\r\nexport const userFavSong = () => async (dispatch) => {\r\n  setAuthToken(localStorage.token);\r\n  const config = {\r\n    header: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  //Check if Post is actually required because we are just getting the user fav info\r\n  const allSongs = await axios.post(\"/userchoice/allFavSongs\", null, config);\r\n\r\n  dispatch({\r\n    type: ALL_SONG,\r\n    payload: allSongs.data,\r\n  });\r\n};\r\n\r\nexport const allArtistSongs = (artistType, id) => async (dispatch) => {\r\n  const allSongs = await axios.get(`/song/${artistType}/${id}`);\r\n  if (allSongs === null) {\r\n    allSongs.data = null;\r\n  }\r\n  dispatch({\r\n    type: ALL_SONG,\r\n    payload: allSongs.data,\r\n  });\r\n};\r\n\r\nexport const likeDislikeSong = (songID, action) => async (dispatch) => {\r\n  setAuthToken(localStorage.token);\r\n  const config = {\r\n    header: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  };\r\n  const route = action === \"like\" ? \"likeSong\" : \"dislikeSong\";\r\n\r\n  const res = await axios.post(`/song/${route}/${songID}`, null, config);\r\n  const payload = {\r\n    id: songID,\r\n    data: res.data,\r\n  };\r\n  dispatch({\r\n    type: LIKE_SONG,\r\n    payload: payload,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}