{"ast":null,"code":"import { LOGIN_USER_SUCCESS, REGISTER_USER_SUCCESS, LOAD_USER } from \"../types\";\nimport { axios } from \"axios\"; //Register User on database\n\nconst signUpUser = async formData => {\n  //Have  to make rest call for registering user\n  const res = await axios.get(\"!#\");\n  dispatchEvent({\n    type: REGISTER_USER_SUCCESS,\n    payload: res.data\n  });\n}; // Login User when check with Database\n\n\nconst loginUser = async formData => {\n  //Will make a rest call to check if we can login and the set token returned\n  const res = await axios.get(\"!#\");\n  dispatchEvent({\n    type: LOGIN_USER_SUCCESS,\n    payload: res.data\n  });\n}; //Will store logged in or Signed up user\n\n\nconst loadUser = async () => {\n  setAuthToken(localStorage.token);\n\n  try {\n    const res = await axios.get(\"/user\");\n    dispatchEvent({\n      type: LOAD_USER,\n      payload: res.data\n    });\n  } catch (error) {//TODO\n  }\n};\n\nexport { loginUser, signUpUser, loadUser };","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/state/actions/userAction.js"],"names":["LOGIN_USER_SUCCESS","REGISTER_USER_SUCCESS","LOAD_USER","axios","signUpUser","formData","res","get","dispatchEvent","type","payload","data","loginUser","loadUser","setAuthToken","localStorage","token","error"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,qBAA7B,EAAoDC,SAApD,QAAqE,UAArE;AACA,SAASC,KAAT,QAAsB,OAAtB,C,CAEA;;AACA,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AACrC;AACA,QAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,IAAV,CAAlB;AACAC,EAAAA,aAAa,CAAC;AACZC,IAAAA,IAAI,EAAER,qBADM;AAEZS,IAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFD,GAAD,CAAb;AAID,CAPD,C,CASA;;;AACA,MAAMC,SAAS,GAAG,MAAOP,QAAP,IAAoB;AACpC;AACA,QAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,IAAV,CAAlB;AACAC,EAAAA,aAAa,CAAC;AACZC,IAAAA,IAAI,EAAET,kBADM;AAEZU,IAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFD,GAAD,CAAb;AAID,CAPD,C,CASA;;;AACA,MAAME,QAAQ,GAAG,YAAY;AAC3BC,EAAAA,YAAY,CAACC,YAAY,CAACC,KAAd,CAAZ;;AACA,MAAI;AACF,UAAMV,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,OAAV,CAAlB;AACAC,IAAAA,aAAa,CAAC;AACZC,MAAAA,IAAI,EAAEP,SADM;AAEZQ,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFD,KAAD,CAAb;AAID,GAND,CAME,OAAOM,KAAP,EAAc,CACd;AACD;AACF,CAXD;;AAaA,SAASL,SAAT,EAAoBR,UAApB,EAAgCS,QAAhC","sourcesContent":["import { LOGIN_USER_SUCCESS, REGISTER_USER_SUCCESS, LOAD_USER } from \"../types\";\r\nimport { axios } from \"axios\";\r\n\r\n//Register User on database\r\nconst signUpUser = async (formData) => {\r\n  //Have  to make rest call for registering user\r\n  const res = await axios.get(\"!#\");\r\n  dispatchEvent({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\n// Login User when check with Database\r\nconst loginUser = async (formData) => {\r\n  //Will make a rest call to check if we can login and the set token returned\r\n  const res = await axios.get(\"!#\");\r\n  dispatchEvent({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\n//Will store logged in or Signed up user\r\nconst loadUser = async () => {\r\n  setAuthToken(localStorage.token);\r\n  try {\r\n    const res = await axios.get(\"/user\");\r\n    dispatchEvent({\r\n      type: LOAD_USER,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    //TODO\r\n  }\r\n};\r\n\r\nexport { loginUser, signUpUser, loadUser };\r\n"]},"metadata":{},"sourceType":"module"}