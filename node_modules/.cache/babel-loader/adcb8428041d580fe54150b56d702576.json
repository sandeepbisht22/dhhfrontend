{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bisht\\\\Project\\\\DHH\\\\dhh\\\\client\\\\src\\\\component\\\\pages\\\\creators\\\\rapper\\\\all\\\\everyCategory\\\\AllCategory.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SingleArtistRow from \"./SingleArtistRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllCategory = ({\n  titles,\n  artistType\n}) => {\n  _s();\n\n  const artists = useSelector(state => state.artist.artists);\n  return artists !== null && artists.map((artist, i) => /*#__PURE__*/_jsxDEV(SingleArtistRow, {\n    artistsInfo: artist.data,\n    title: titles[i]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this));\n};\n\n_s(AllCategory, \"51KPRls7gn2nxINsqeQjaMzpWeY=\", false, function () {\n  return [useSelector];\n});\n\n_c = AllCategory;\nexport default AllCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCategory\");","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/component/pages/creators/rapper/all/everyCategory/AllCategory.jsx"],"names":["React","useSelector","SingleArtistRow","AllCategory","titles","artistType","artists","state","artist","map","i","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA4B;AAAA;;AAC9C,QAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,OAAzB,CAA3B;AAEA,SACEA,OAAO,KAAK,IAAZ,IACAA,OAAO,CAACG,GAAR,CAAY,CAACD,MAAD,EAASE,CAAT,kBACV,QAAC,eAAD;AAAiB,IAAA,WAAW,EAAEF,MAAM,CAACG,IAArC;AAA2C,IAAA,KAAK,EAAEP,MAAM,CAACM,CAAD;AAAxD;AAAA;AAAA;AAAA;AAAA,UADF,CAFF;AAMD,CATD;;GAAMP,W;UACYF,W;;;KADZE,W;AAWN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SingleArtistRow from \"./SingleArtistRow\";\r\n\r\nconst AllCategory = ({ titles, artistType }) => {\r\n  const artists = useSelector((state) => state.artist.artists);\r\n\r\n  return (\r\n    artists !== null &&\r\n    artists.map((artist, i) => (\r\n      <SingleArtistRow artistsInfo={artist.data} title={titles[i]} />\r\n    ))\r\n  );\r\n};\r\n\r\nexport default AllCategory;\r\n"]},"metadata":{},"sourceType":"module"}