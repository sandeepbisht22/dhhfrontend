{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bisht\\\\Project\\\\DHH\\\\dhh\\\\client\\\\src\\\\component\\\\auth\\\\LoginGoogle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { alertActions, userActions } from \"../../state/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar generator = require(\"generate-password\");\n\nconst LoginGoogle = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSuccess = res => {\n    console.log(\"Login Sucess currentUSer \" + JSON.stringify(res));\n\n    try {\n      dispatch(userActions.loginViaGoogle(res.profileObj.email));\n    } catch (error) {\n      console.log(\"Error while loggin in via gogle. User does not exist. Creating new user \");\n      var password = generator.generate({\n        length: 10,\n        numbers: true\n      });\n      const user = {\n        name: res.profileObj.name,\n        email: res.profileObj.email,\n        usersource: \"google\",\n        password: password\n      };\n      dispatch(userActions.signUpUser(user));\n    }\n  };\n\n  const onFailure = () => {\n    console.log(\"Login Fail\");\n  };\n\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\n  const error = useSelector(state => state.user.error);\n  const value = process.env.REACT_APP_GOOGLE_O_AUTH_CLIENT_ID;\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(\"/\");\n    } else if (error === \"invalid Email\" || error === \"invalid Password\") {\n      dispatch(alertActions.setAlert(error, \"danger\"));\n      dispatch(userActions.clearErrors());\n    }\n  }, [error, isAuthenticated, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-5\",\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: value,\n      buttonText: \"Login this shit\",\n      render: renderProps => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: renderProps.onClick,\n        disabled: renderProps.disabled,\n        style: {\n          backgroundColor: \"#272727\",\n          color: \"#61892F\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"!#\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fab fa-google fa-5x\",\n            style: {\n              color: \"grey\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login via Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this),\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: \"single_host_origin\",\n      className: \"mt-5\",\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginGoogle, \"7gsUzIyBglkBfF9JaApx5RUlEX8=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = LoginGoogle;\nexport default LoginGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginGoogle\");","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/component/auth/LoginGoogle.js"],"names":["React","useEffect","GoogleLogin","alertActions","userActions","useDispatch","useSelector","useHistory","generator","require","LoginGoogle","dispatch","history","onSuccess","res","console","log","JSON","stringify","loginViaGoogle","profileObj","email","error","password","generate","length","numbers","user","name","usersource","signUpUser","onFailure","isAuthenticated","state","value","process","env","REACT_APP_GOOGLE_O_AUTH_CLIENT_ID","push","setAlert","clearErrors","renderProps","onClick","disabled","backgroundColor","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,qBAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,mBAAD,CAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGL,UAAU,EAA1B;;AACA,QAAMM,SAAS,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAA1C;;AACA,QAAI;AACFH,MAAAA,QAAQ,CAACP,WAAW,CAACe,cAAZ,CAA2BL,GAAG,CAACM,UAAJ,CAAeC,KAA1C,CAAD,CAAR;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdP,MAAAA,OAAO,CAACC,GAAR,CACE,0EADF;AAGA,UAAIO,QAAQ,GAAGf,SAAS,CAACgB,QAAV,CAAmB;AAChCC,QAAAA,MAAM,EAAE,EADwB;AAEhCC,QAAAA,OAAO,EAAE;AAFuB,OAAnB,CAAf;AAIA,YAAMC,IAAI,GAAG;AACXC,QAAAA,IAAI,EAAEd,GAAG,CAACM,UAAJ,CAAeQ,IADV;AAEXP,QAAAA,KAAK,EAAEP,GAAG,CAACM,UAAJ,CAAeC,KAFX;AAGXQ,QAAAA,UAAU,EAAE,QAHD;AAIXN,QAAAA,QAAQ,EAAEA;AAJC,OAAb;AAOAZ,MAAAA,QAAQ,CAACP,WAAW,CAAC0B,UAAZ,CAAuBH,IAAvB,CAAD,CAAR;AACD;AACF,GArBD;;AAuBA,QAAMI,SAAS,GAAG,MAAM;AACtBhB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFD;;AAGA,QAAMgB,eAAe,GAAG1B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACN,IAAN,CAAWK,eAAvB,CAAnC;AACA,QAAMV,KAAK,GAAGhB,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACN,IAAN,CAAWL,KAAvB,CAAzB;AAEA,QAAMY,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,iCAA1B;AACApC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+B,eAAJ,EAAqB;AACnBpB,MAAAA,OAAO,CAAC0B,IAAR,CAAa,GAAb;AACD,KAFD,MAEO,IAAIhB,KAAK,KAAK,eAAV,IAA6BA,KAAK,KAAK,kBAA3C,EAA+D;AACpEX,MAAAA,QAAQ,CAACR,YAAY,CAACoC,QAAb,CAAsBjB,KAAtB,EAA6B,QAA7B,CAAD,CAAR;AACAX,MAAAA,QAAQ,CAACP,WAAW,CAACoC,WAAZ,EAAD,CAAR;AACD;AACF,GAPQ,EAON,CAAClB,KAAD,EAAQU,eAAR,EAAyBpB,OAAzB,CAPM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEsB,KADZ;AAEE,MAAA,UAAU,EAAC,iBAFb;AAGE,MAAA,MAAM,EAAGO,WAAD,iBACN;AACE,QAAA,OAAO,EAAEA,WAAW,CAACC,OADvB;AAEE,QAAA,QAAQ,EAAED,WAAW,CAACE,QAFxB;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,KAAK,EAAE;AAArC,SAHT;AAAA,gCAKE;AAAG,UAAA,IAAI,EAAC,IAAR;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAmC,YAAA,KAAK,EAAE;AAAEA,cAAAA,KAAK,EAAE;AAAT;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAeE,MAAA,SAAS,EAAEhC,SAfb;AAgBE,MAAA,SAAS,EAAEkB,SAhBb;AAiBE,MAAA,YAAY,EAAE,oBAjBhB;AAkBE,MAAA,SAAS,EAAC,MAlBZ;AAmBE,MAAA,UAAU,EAAE;AAnBd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAlED;;GAAMrB,W;UACaL,W,EACDE,U,EA2BQD,W,EACVA,W;;;KA9BVI,W;AAmEN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { alertActions, userActions } from \"../../state/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nvar generator = require(\"generate-password\");\r\n\r\nconst LoginGoogle = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const onSuccess = (res) => {\r\n    console.log(\"Login Sucess currentUSer \" + JSON.stringify(res));\r\n    try {\r\n      dispatch(userActions.loginViaGoogle(res.profileObj.email));\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error while loggin in via gogle. User does not exist. Creating new user \"\r\n      );\r\n      var password = generator.generate({\r\n        length: 10,\r\n        numbers: true,\r\n      });\r\n      const user = {\r\n        name: res.profileObj.name,\r\n        email: res.profileObj.email,\r\n        usersource: \"google\",\r\n        password: password,\r\n      };\r\n\r\n      dispatch(userActions.signUpUser(user));\r\n    }\r\n  };\r\n\r\n  const onFailure = () => {\r\n    console.log(\"Login Fail\");\r\n  };\r\n  const isAuthenticated = useSelector((state) => state.user.isAuthenticated);\r\n  const error = useSelector((state) => state.user.error);\r\n\r\n  const value = process.env.REACT_APP_GOOGLE_O_AUTH_CLIENT_ID;\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(\"/\");\r\n    } else if (error === \"invalid Email\" || error === \"invalid Password\") {\r\n      dispatch(alertActions.setAlert(error, \"danger\"));\r\n      dispatch(userActions.clearErrors());\r\n    }\r\n  }, [error, isAuthenticated, history]);\r\n  return (\r\n    <div className=\"pb-5\">\r\n      <GoogleLogin\r\n        clientId={value}\r\n        buttonText=\"Login this shit\"\r\n        render={(renderProps) => (\r\n          <button\r\n            onClick={renderProps.onClick}\r\n            disabled={renderProps.disabled}\r\n            style={{ backgroundColor: \"#272727\", color: \"#61892F\" }}\r\n          >\r\n            <a href=\"!#\">\r\n              <i className=\"fab fa-google fa-5x\" style={{ color: \"grey\" }}></i>\r\n            </a>\r\n            <div>Login via Google</div>\r\n          </button>\r\n        )}\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n        cookiePolicy={\"single_host_origin\"}\r\n        className=\"mt-5\"\r\n        isSignedIn={true}\r\n      ></GoogleLogin>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginGoogle;\r\n"]},"metadata":{},"sourceType":"module"}