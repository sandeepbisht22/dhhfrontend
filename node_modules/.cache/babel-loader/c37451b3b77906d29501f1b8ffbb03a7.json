{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./state/reducer\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nconst persistConfig = {\n  key: \"primary\",\n  storage,\n  stateReconciler: autoMergeLevel2,\n  whitelist: [\"user\", \"artist\"],\n  blacklist: [\"alerts\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWare = [thunk];\nconst initialState = {}; // export const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleWare))\n// );\n\nexport const store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","persistStore","persistReducer","storage","autoMergeLevel2","persistConfig","key","stateReconciler","whitelist","blacklist","persistedReducer","middleWare","initialState","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,SADe;AAEpBH,EAAAA,OAFoB;AAGpBI,EAAAA,eAAe,EAAEH,eAHG;AAIpBI,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,QAAT,CAJS;AAKpBC,EAAAA,SAAS,EAAE,CAAC,QAAD;AALS,CAAtB;AAQA,MAAMC,gBAAgB,GAAGR,cAAc,CAACG,aAAD,EAAgBL,WAAhB,CAAvC;AAEA,MAAMW,UAAU,GAAG,CAACZ,KAAD,CAAnB;AACA,MAAMa,YAAY,GAAG,EAArB,C,CAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,KAAK,GAAGjB,WAAW,CAC9Bc,gBAD8B,EAE9BE,YAF8B,EAG9Bd,mBAAmB,CAACD,eAAe,CAAC,GAAGc,UAAJ,CAAhB,CAHW,CAAzB;AAMP,OAAO,MAAMG,SAAS,GAAGb,YAAY,CAACY,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./state/reducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\n\r\nconst persistConfig = {\r\n  key: \"primary\",\r\n  storage,\r\n  stateReconciler: autoMergeLevel2,\r\n  whitelist: [\"user\", \"artist\"],\r\n  blacklist: [\"alerts\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst middleWare = [thunk];\r\nconst initialState = {};\r\n\r\n// export const store = createStore(\r\n//   rootReducer,\r\n//   initialState,\r\n//   composeWithDevTools(applyMiddleware(...middleWare))\r\n// );\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}