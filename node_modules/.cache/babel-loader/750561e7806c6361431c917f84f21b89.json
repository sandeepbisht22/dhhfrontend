{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bisht\\\\Project\\\\DHH\\\\dhh\\\\client\\\\src\\\\component\\\\common\\\\HorizontalScroll.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, Fragment } from \"react\";\nimport ScrollItem from \"./ScrollItem\";\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HorizontalScroll = ({\n  horizontalScroll: {\n    title,\n    scrollList\n  }\n}) => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [selected, setSelected] = useState([]);\n  const [position, setPosition] = useState(0);\n\n  const isItemSelected = id => !!selected.find(el => el === id);\n\n  const handleClick = id => ({\n    getItemById,\n    scrollToItem\n  }) => {\n    const itemSelected = isItemSelected(id);\n    setSelected(currentSelected => itemSelected ? currentSelected.filter(el => el !== id) : currentSelected.concat(id));\n  };\n\n  function LeftArrow() {\n    _s();\n\n    const {\n      isFirstItemVisible,\n      scrollPrev\n    } = useContext(VisibilityContext);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      disabled: isFirstItemVisible,\n      onClick: () => scrollPrev(),\n      children: \"Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(LeftArrow, \"7jIBA3f6wpQrSoSpOqBzBD7M7QQ=\");\n\n  function RightArrow() {\n    _s2();\n\n    const {\n      isLastItemVisible,\n      scrollNext\n    } = useContext(VisibilityContext);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      disabled: isLastItemVisible,\n      onClick: () => scrollNext(),\n      children: \"Right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s2(RightArrow, \"F/wm/0gG0EqvotRFx60gSLDQ574=\");\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollMenu, {\n      LeftArrow: LeftArrow,\n      RightArrow: RightArrow,\n      children: scrollList !== null && scrollList.map(scroll => /*#__PURE__*/_jsxDEV(ScrollItem, {\n        profileImage: scroll.profileImage,\n        name: scroll.name,\n        onClick: handleClick(scroll.id),\n        selected: isItemSelected(scroll.id)\n      }, scroll.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(HorizontalScroll, \"upago/0Ofz87FYUAvtYuQKKKge0=\");\n\n_c = HorizontalScroll;\nexport default HorizontalScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalScroll\");","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/component/common/HorizontalScroll.js"],"names":["React","useState","useContext","Fragment","ScrollItem","ScrollMenu","VisibilityContext","HorizontalScroll","horizontalScroll","title","scrollList","selected","setSelected","position","setPosition","isItemSelected","id","find","el","handleClick","getItemById","scrollToItem","itemSelected","currentSelected","filter","concat","LeftArrow","isFirstItemVisible","scrollPrev","RightArrow","isLastItemVisible","scrollNext","map","scroll","profileImage","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,iCAA9C;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,gBAAgB,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAApB,CAAD,KAAiD;AAAA;;AAAA;AAAA;;AACxE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,CAAD,CAAxC;;AACA,QAAMc,cAAc,GAAIC,EAAD,IAAQ,CAAC,CAACL,QAAQ,CAACM,IAAT,CAAeC,EAAD,IAAQA,EAAE,KAAKF,EAA7B,CAAjC;;AACA,QAAMG,WAAW,GACdH,EAAD,IACA,CAAC;AAAEI,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,KAAmC;AACjC,UAAMC,YAAY,GAAGP,cAAc,CAACC,EAAD,CAAnC;AAEAJ,IAAAA,WAAW,CAAEW,eAAD,IACVD,YAAY,GACRC,eAAe,CAACC,MAAhB,CAAwBN,EAAD,IAAQA,EAAE,KAAKF,EAAtC,CADQ,GAERO,eAAe,CAACE,MAAhB,CAAuBT,EAAvB,CAHK,CAAX;AAKD,GAVH;;AAWA,WAASU,SAAT,GAAqB;AAAA;;AACnB,UAAM;AAAEC,MAAAA,kBAAF;AAAsBC,MAAAA;AAAtB,QAAqC1B,UAAU,CAACI,iBAAD,CAArD;AAEA,wBACE;AAAK,MAAA,QAAQ,EAAEqB,kBAAf;AAAmC,MAAA,OAAO,EAAE,MAAMC,UAAU,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxBuE,KAe/DF,SAf+D;;AA0BxE,WAASG,UAAT,GAAsB;AAAA;;AACpB,UAAM;AAAEC,MAAAA,iBAAF;AAAqBC,MAAAA;AAArB,QAAoC7B,UAAU,CAACI,iBAAD,CAApD;AAEA,wBACE;AAAK,MAAA,QAAQ,EAAEwB,iBAAf;AAAkC,MAAA,OAAO,EAAE,MAAMC,UAAU,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAnCuE,MA0B/DF,UA1B+D;;AAqCxE,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,gBAAKpB;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEiB,SAAvB;AAAkC,MAAA,UAAU,EAAEG,UAA9C;AAAA,gBACGnB,UAAU,KAAK,IAAf,IACCA,UAAU,CAACsB,GAAX,CAAgBC,MAAD,iBACb,QAAC,UAAD;AAEE,QAAA,YAAY,EAAEA,MAAM,CAACC,YAFvB;AAGE,QAAA,IAAI,EAAED,MAAM,CAACE,IAHf;AAIE,QAAA,OAAO,EAAEhB,WAAW,CAACc,MAAM,CAACjB,EAAR,CAJtB;AAKE,QAAA,QAAQ,EAAED,cAAc,CAACkB,MAAM,CAACjB,EAAR;AAL1B,SACOiB,MAAM,CAACjB,EADd;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtDD;;IAAMT,gB;;KAAAA,gB;AAwDN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useContext, Fragment } from \"react\";\r\nimport ScrollItem from \"./ScrollItem\";\r\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\r\n\r\nconst HorizontalScroll = ({ horizontalScroll: { title, scrollList } }) => {\r\n  const [selected, setSelected] = useState([]);\r\n  const [position, setPosition] = useState(0);\r\n  const isItemSelected = (id) => !!selected.find((el) => el === id);\r\n  const handleClick =\r\n    (id) =>\r\n    ({ getItemById, scrollToItem }) => {\r\n      const itemSelected = isItemSelected(id);\r\n\r\n      setSelected((currentSelected) =>\r\n        itemSelected\r\n          ? currentSelected.filter((el) => el !== id)\r\n          : currentSelected.concat(id)\r\n      );\r\n    };\r\n  function LeftArrow() {\r\n    const { isFirstItemVisible, scrollPrev } = useContext(VisibilityContext);\r\n\r\n    return (\r\n      <div disabled={isFirstItemVisible} onClick={() => scrollPrev()}>\r\n        {/* <i className=\"fas fa-chevron-circle-left fa-3x\" /> */}\r\n        Left\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function RightArrow() {\r\n    const { isLastItemVisible, scrollNext } = useContext(VisibilityContext);\r\n\r\n    return (\r\n      <div disabled={isLastItemVisible} onClick={() => scrollNext()}>\r\n        Right\r\n        {/* <i className=\"fas fa-chevron-circle-right fa-3x\"></i> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h4>{title}</h4>\r\n      <ScrollMenu LeftArrow={LeftArrow} RightArrow={RightArrow}>\r\n        {scrollList !== null &&\r\n          scrollList.map((scroll) => (\r\n            <ScrollItem\r\n              key={scroll.id}\r\n              profileImage={scroll.profileImage}\r\n              name={scroll.name}\r\n              onClick={handleClick(scroll.id)}\r\n              selected={isItemSelected(scroll.id)}\r\n            ></ScrollItem>\r\n          ))}\r\n      </ScrollMenu>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HorizontalScroll;\r\n"]},"metadata":{},"sourceType":"module"}