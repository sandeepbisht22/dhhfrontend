{"ast":null,"code":"import { LOGIN_USER_SUCCESS, REGISTER_USER_SUCCESS, LOAD_USER } from \"../types\";\nimport axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthnToken\"; //Register User on database\n\nconst signUpUser = async formData => async dispatch => {\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }; //Have  to make rest call for registering user\n\n  const res = await axios.post(\"/user\", formData, config);\n  dispatch({\n    type: REGISTER_USER_SUCCESS,\n    payload: res.data\n  });\n}; // Login User when check with Database\n\n\nconst loginUser = async formData => async dispatch => {\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }; //Will make a rest call to check if we can login and the set token returned\n\n  const res = await axios.post(\"/auth\", formData, config);\n  dispatch({\n    type: LOGIN_USER_SUCCESS,\n    payload: res.data\n  });\n}; //Will store logged in or Signed up user\n\n\nconst loadUser = async () => {\n  console.log(\"load User is called\");\n  setAuthToken(localStorage.token);\n\n  try {\n    const res = await axios.get(\"/user\");\n    dispatchEvent({\n      type: LOAD_USER,\n      payload: res.data\n    });\n  } catch (error) {//TODO\n  }\n};\n\nexport { loginUser, signUpUser, loadUser };","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/state/actions/userAction.js"],"names":["LOGIN_USER_SUCCESS","REGISTER_USER_SUCCESS","LOAD_USER","axios","setAuthToken","signUpUser","formData","dispatch","config","headers","res","post","type","payload","data","loginUser","loadUser","console","log","localStorage","token","get","dispatchEvent","error"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,qBAA7B,EAAoDC,SAApD,QAAqE,UAArE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CACA;;AACA,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB,MAAOC,QAAP,IAAoB;AACzD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CADyD,CAMzD;;AACA,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAW,OAAX,EAAoBL,QAApB,EAA8BE,MAA9B,CAAlB;AACAD,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEX,qBADC;AAEPY,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,GAAD,CAAR;AAID,CAZD,C,CAcA;;;AACA,MAAMC,SAAS,GAAG,MAAOT,QAAP,IAAoB,MAAOC,QAAP,IAAoB;AACxD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CADwD,CAMxD;;AACA,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAW,OAAX,EAAoBL,QAApB,EAA8BE,MAA9B,CAAlB;AACAD,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEZ,kBADC;AAEPa,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,GAAD,CAAR;AAID,CAZD,C,CAcA;;;AACA,MAAME,QAAQ,GAAG,YAAY;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAd,EAAAA,YAAY,CAACe,YAAY,CAACC,KAAd,CAAZ;;AACA,MAAI;AACF,UAAMV,GAAG,GAAG,MAAMP,KAAK,CAACkB,GAAN,CAAU,OAAV,CAAlB;AACAC,IAAAA,aAAa,CAAC;AACZV,MAAAA,IAAI,EAAEV,SADM;AAEZW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFD,KAAD,CAAb;AAID,GAND,CAME,OAAOS,KAAP,EAAc,CACd;AACD;AACF,CAZD;;AAcA,SAASR,SAAT,EAAoBV,UAApB,EAAgCW,QAAhC","sourcesContent":["import { LOGIN_USER_SUCCESS, REGISTER_USER_SUCCESS, LOAD_USER } from \"../types\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../../utils/setAuthnToken\";\r\n//Register User on database\r\nconst signUpUser = async (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  };\r\n  //Have  to make rest call for registering user\r\n  const res = await axios.post(\"/user\", formData, config);\r\n  dispatch({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\n// Login User when check with Database\r\nconst loginUser = async (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  };\r\n  //Will make a rest call to check if we can login and the set token returned\r\n  const res = await axios.post(\"/auth\", formData, config);\r\n  dispatch({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\n//Will store logged in or Signed up user\r\nconst loadUser = async () => {\r\n  console.log(\"load User is called\");\r\n  setAuthToken(localStorage.token);\r\n  try {\r\n    const res = await axios.get(\"/user\");\r\n    dispatchEvent({\r\n      type: LOAD_USER,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    //TODO\r\n  }\r\n};\r\n\r\nexport { loginUser, signUpUser, loadUser };\r\n"]},"metadata":{},"sourceType":"module"}