{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bisht\\\\Project\\\\DHH\\\\dhh\\\\client\\\\src\\\\component\\\\auth\\\\LoginGoogle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { alertActions, userActions } from \"../../state/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar generator = require(\"generate-password\");\n\nconst LoginGoogle = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSuccess = res => {\n    console.log(\"Login Sucess currentUSer \" + JSON.stringify(res));\n    var password = generator.generate({\n      length: 10,\n      numbers: true\n    });\n    const user = {\n      name: res.profileObj.name,\n      email: res.profileObj.email,\n      usersource: \"google\",\n      password: password\n    };\n    dispatch(userActions.signUpUser(user));\n  };\n\n  const onFailure = () => {\n    console.log(\"Login Fail\");\n  };\n\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\n  const error = useSelector(state => state.user.error);\n  const value = process.env.REACT_APP_GOOGLE_O_AUTH_CLIENT_ID;\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(\"/\");\n    } else if (error === \"invalid Email\" || error === \"invalid Password\") {\n      dispatch(alertActions.setAlert(error, \"danger\"));\n      clearErrors();\n    }\n  }, [error, isAuthenticated, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-5\",\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin // clientId={process.env.REACT_APP_GOOGLE_O_AUTH_CLIENT_ID}\n    , {\n      clientId: value,\n      buttonText: \"Login this shit\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: \"single_host_origin\",\n      className: \"mt-5\",\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginGoogle, \"7gsUzIyBglkBfF9JaApx5RUlEX8=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = LoginGoogle;\nexport default LoginGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginGoogle\");","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/component/auth/LoginGoogle.js"],"names":["React","useEffect","GoogleLogin","alertActions","userActions","useDispatch","useSelector","useHistory","generator","require","LoginGoogle","dispatch","history","onSuccess","res","console","log","JSON","stringify","password","generate","length","numbers","user","name","profileObj","email","usersource","signUpUser","onFailure","isAuthenticated","state","error","value","process","env","REACT_APP_GOOGLE_O_AUTH_CLIENT_ID","push","setAlert","clearErrors"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,qBAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,mBAAD,CAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGL,UAAU,EAA1B;;AACA,QAAMM,SAAS,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAA1C;AACA,QAAIK,QAAQ,GAAGX,SAAS,CAACY,QAAV,CAAmB;AAChCC,MAAAA,MAAM,EAAE,EADwB;AAEhCC,MAAAA,OAAO,EAAE;AAFuB,KAAnB,CAAf;AAIA,UAAMC,IAAI,GAAG;AACXC,MAAAA,IAAI,EAAEV,GAAG,CAACW,UAAJ,CAAeD,IADV;AAEXE,MAAAA,KAAK,EAAEZ,GAAG,CAACW,UAAJ,CAAeC,KAFX;AAGXC,MAAAA,UAAU,EAAE,QAHD;AAIXR,MAAAA,QAAQ,EAAEA;AAJC,KAAb;AAMAR,IAAAA,QAAQ,CAACP,WAAW,CAACwB,UAAZ,CAAuBL,IAAvB,CAAD,CAAR;AACD,GAbD;;AAeA,QAAMM,SAAS,GAAG,MAAM;AACtBd,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFD;;AAGA,QAAMc,eAAe,GAAGxB,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACR,IAAN,CAAWO,eAAvB,CAAnC;AACA,QAAME,KAAK,GAAG1B,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACR,IAAN,CAAWS,KAAvB,CAAzB;AAEA,QAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,iCAA1B;AACAnC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,eAAJ,EAAqB;AACnBlB,MAAAA,OAAO,CAACyB,IAAR,CAAa,GAAb;AACD,KAFD,MAEO,IAAIL,KAAK,KAAK,eAAV,IAA6BA,KAAK,KAAK,kBAA3C,EAA+D;AACpErB,MAAAA,QAAQ,CAACR,YAAY,CAACmC,QAAb,CAAsBN,KAAtB,EAA6B,QAA7B,CAAD,CAAR;AACAO,MAAAA,WAAW;AACZ;AACF,GAPQ,EAON,CAACP,KAAD,EAAQF,eAAR,EAAyBlB,OAAzB,CAPM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,WAAD,CACE;AADF;AAEE,MAAA,QAAQ,EAAEqB,KAFZ;AAGE,MAAA,UAAU,EAAC,iBAHb;AAIE,MAAA,SAAS,EAAEpB,SAJb;AAKE,MAAA,SAAS,EAAEgB,SALb;AAME,MAAA,YAAY,EAAE,oBANhB;AAOE,MAAA,SAAS,EAAC,MAPZ;AAQE,MAAA,UAAU,EAAE;AARd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/CD;;GAAMnB,W;UACaL,W,EACDE,U,EAmBQD,W,EACVA,W;;;KAtBVI,W;AAgDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { alertActions, userActions } from \"../../state/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nvar generator = require(\"generate-password\");\r\n\r\nconst LoginGoogle = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const onSuccess = (res) => {\r\n    console.log(\"Login Sucess currentUSer \" + JSON.stringify(res));\r\n    var password = generator.generate({\r\n      length: 10,\r\n      numbers: true,\r\n    });\r\n    const user = {\r\n      name: res.profileObj.name,\r\n      email: res.profileObj.email,\r\n      usersource: \"google\",\r\n      password: password,\r\n    };\r\n    dispatch(userActions.signUpUser(user));\r\n  };\r\n\r\n  const onFailure = () => {\r\n    console.log(\"Login Fail\");\r\n  };\r\n  const isAuthenticated = useSelector((state) => state.user.isAuthenticated);\r\n  const error = useSelector((state) => state.user.error);\r\n\r\n  const value = process.env.REACT_APP_GOOGLE_O_AUTH_CLIENT_ID;\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(\"/\");\r\n    } else if (error === \"invalid Email\" || error === \"invalid Password\") {\r\n      dispatch(alertActions.setAlert(error, \"danger\"));\r\n      clearErrors();\r\n    }\r\n  }, [error, isAuthenticated, history]);\r\n  return (\r\n    <div className=\"pb-5\">\r\n      <GoogleLogin\r\n        // clientId={process.env.REACT_APP_GOOGLE_O_AUTH_CLIENT_ID}\r\n        clientId={value}\r\n        buttonText=\"Login this shit\"\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n        cookiePolicy={\"single_host_origin\"}\r\n        className=\"mt-5\"\r\n        isSignedIn={true}\r\n      ></GoogleLogin>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginGoogle;\r\n"]},"metadata":{},"sourceType":"module"}