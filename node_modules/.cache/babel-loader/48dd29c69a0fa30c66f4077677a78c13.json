{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./state/reducer\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\", \"artist\"],\n  blacklist: [\"alerts\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWare = [thunk];\nconst initialState = {};\nexport const store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleWare))); // export const store = createStore(\n//   persistedReducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleWare))\n// );\n// export const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/bisht/Project/DHH/dhh/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","persistStore","persistReducer","storage","persistConfig","key","whitelist","blacklist","persistedReducer","middleWare","initialState","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA,OAFoB;AAGpBG,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,QAAT,CAHS;AAIpBC,EAAAA,SAAS,EAAE,CAAC,QAAD;AAJS,CAAtB;AAOA,MAAMC,gBAAgB,GAAGN,cAAc,CAACE,aAAD,EAAgBJ,WAAhB,CAAvC;AAEA,MAAMS,UAAU,GAAG,CAACV,KAAD,CAAnB;AACA,MAAMW,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,KAAK,GAAGf,WAAW,CAC9BI,WAD8B,EAE9BU,YAF8B,EAG9BZ,mBAAmB,CAACD,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAHW,CAAzB,C,CAKP;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./state/reducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"user\", \"artist\"],\r\n  blacklist: [\"alerts\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst middleWare = [thunk];\r\nconst initialState = {};\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n// export const store = createStore(\r\n//   persistedReducer,\r\n//   initialState,\r\n//   composeWithDevTools(applyMiddleware(...middleWare))\r\n// );\r\n\r\n// export const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}